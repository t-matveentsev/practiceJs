// Object

const user = {
    name: 'Test user',
    skills: {
        html: true,
        css: true,
        react: false
    },
}

// call object

console.log(user.name);
console.log('css', user.skills.css);

const objectKey = 'skills'
const skillKey = 'css'

console.log(user[objectKey]);
console.log(user[objectKey][skillKey]);
console.log(user.skills[skillKey]);
console.log(user[objectKey].css);

// –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑–∞ –∫—Ä–∞–ø–∫–æ—é –≤–∫–∞–∑—É—î–º–æ —Ñ–∞–∫—Ç–∏—á–Ω—É –Ω–∞–∑–≤—É –∫–ª—é—á–∞, —á–µ—Ä–µ–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ñ –¥—É–∂–∫–∏ –∑–º—ñ–Ω–Ω–∞ –≤ —è–∫—ñ–π –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –∫–ª—é—á

// Change of value, made a new key

user.city = 'Lviv';
console.log(user);

user['age'] = 28;
console.log(user);

user.city = 'Odessa'; // –¢–∞–∫–∏–º —á–∏–Ω–æ–º –ø–µ—Ä–µ–±–∏–≤–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∞ –Ω–µ –¥–æ–¥–∞—î–º–æ 
console.log(user);

// Object freeze - Object.freeze(user) –º–æ–∂–Ω–∞ —Ç–∞–∫–æ–∂ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –≤–∫–ª–∞–¥–µ–Ω–∏–π –æ–± º—î–∫—Ç Object.freeze(user.skills)

delete user.city // –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª—é—á–∞
console.log(user);


// Method Object

const firstHuman = {
  name: "Artem",
  skills: {
    html: true,
    css: true,
    react: false,
    },
  city: 'Lviv',
    sayHello() { // —Ç–µ–∂ –∫–ª—é—á, –∞–ª–µ –∑ –≤–º—ñ—Å—Ç–æ–º —Ñ—É–Ω–∫—Ü—ñ—ó
      console.log(`Hello my name is ${this.name}`);  // —è–∫—â–æ –º–∏ –∑–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –≤ –æ–± º—î–∫—Ç—ñ –¥–æ —Å–∞–º–æ–≥–æ –æ–± º—î–∫—Ç–∞ –∑–∞–≤–∂–¥–∏ –≤–∂–∏–≤–∞—î–º–æ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ this !!!!
  }
};

const secondHuman = {
  name: "Den",
  skills: {
    html: true,
    css: true,
    react: false,
  },
  city: "Lviv",
  sayHello: firstHuman.sayHello //  –ó–∞–≤–¥—è–∫–∏ –∫–ª—é—á–æ–≤–æ–º—É —Å–ª–æ–≤—É this –º–∏ –º–æ–∂–µ–º–æ –ø–µ—Ä–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ —ñ–Ω—à–∏—Ö –æ–± º—î–∫—Ç—ñ–≤
};

firstHuman.sayHello();
secondHuman.sayHello();

// Cycle for...in

const copyObject = Object.create(firstHuman) // —Å–∫–æ–ø—ñ–π–æ–º–∞–Ω–∏–π –æ–± º—î–∫—Ç –∑–∞–≤–∂–¥–∏ –ø—É—Å—Ç–∏–π, –∞–ª–µ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –≤—ñ–Ω –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏–π –æ–± º—î–∫—Ç —ñ –≤—Å–ø–∞—Ç–∫–æ–≤—É—î –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –≤—ñ–¥ –Ω—å–æ–≥–æ
console.log(copyObject);

for (const key in secondHuman) { // –ó–º—ñ–Ω–Ω–∞ –∑–∞–≤–∂–¥–∏ key –ø–µ—Ä–µ–±–µ—Ä–∞—î–º–æ –∑–∞–≤–∂–¥–∏ –∫–ª—é—á—ñ –æ–± º—î–∫—Ç–∞ 
  if (user.hasOwnProperty(key)) {   // –º–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î true or false –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–æ–≥–æ —á–∏ –∫–ª—é—á—å –≤—Å–ø–∞–¥–∫–æ–≤–∞–Ω–∏–π, —Ç–∞–∫–∏–º —á–∏–Ω–æ–º –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º–æ —Ç—ñ–ª—å–∫–∏ –≤–ª–∞—Å–Ω—ñ –∫–ª—é—á—ñ
    console.log(key, secondHuman[key]);  // –Ω–µ–º–∞—î –≤—Å–ø–∞–¥–∫–æ–≤–∞–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
  }
}

// method Object.keys()

// –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–± º—î–∫—Ç–∞ –≤ –º–∞—Å–∏–≤ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ Object.keys() –ø–æ–≤–µ—Ä—Ç–∞—î –ª–∏—à–µ –≤–ª–∞—Å–Ω—ñ –∫–ª—é—á—ñ

const keys = Object.keys(user)
console.log(keys);

for (const key of keys) {        // –ø–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –∫–ª—é—á—ñ (—Ç—ñ–ª—å–∫–∏ –≤–ª–∞—Å–Ω—ñ)
  console.log(key, user[key]);
}


// method Object.values()

const values = Object.values(user)
console.log(values);


// method Object.entries() –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ [[key, values],[key, values]]

const entries = Object.entries(user);
console.log(entries);


// little tasks

// Task 1
// –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø—Ä–∏—è–º–∞—Ç–∏ 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∞ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –æ–± º—î–∫—Ç –ø–æ–∫—É–ø–∫–∏
// 1 - –Ω–∞–∑–≤–∞ –ø—Ä–æ–¥—É–∫—Ç—É
// 2 - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å
// 3 - —Ü—ñ–Ω–∞ –∑–∞ 1 –æ–¥–∏–Ω–∏—Ü—é —Ç–æ–≤–∞—Ä—É
// —Ñ—É–Ω–∫—Ü—ñ –º–æ—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–∏–π –æ–± º—î–∫—Ç –∑ –∫–ª—é—á–∞–º–∏ name, price, quantity, totalPrice

function createBasket(product, quantity, price) {
  const totalPrice = quantity * price;

  return {
    product,
    quantity,
    price,
    totalPrice
  }

  // const basket = {
  //   product, // product(argument) : 'pizza'(values of this argument)
  //   quantity,
  //   price,
  //   totalPrice
  // }
  // return basket
}

console.log(createBasket('pizza', 3, 120));
console.log(createBasket("apple", 35, 70));

// Task 2

// –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–º–ø º—é—Ç–µ—Ä–Ω–æ–≥–æ –∫–ª—É–±—É. –§—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î 1 –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ –æ–± º—î–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–µ –∫–ª—é—Å —Ü–µ —ñ–º º—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –∞ –∑–Ω–∞—á–µ–Ω–Ω—è —Ü—É —á–∞—Å –æ—Ä–µ–Ω–¥–∏ —É —Ö–≤–∏–ª–∏–Ω–∞—Ö
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ç–µ —Å–∫—ñ–ª—å–∫–∏ –±—É–ª–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ —è–∫–∏–π —Å–µ—Ä–µ–¥–Ω—ñ–π —á–∞—Å –æ—Ä–µ–Ω–¥–∏ –∫–æ–º–ø º—é—Ç–µ—Ä–∞

const players = {  // –∫–æ–ª–∏ –æ–¥–Ω–æ—Ç–∏–ø–Ω–∏–π —Ç–∏–ø –¥–∞–Ω–Ω–∏—Ö –º–∏ –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –º–µ—Ç–æ–¥ Object.values()
  Den: 60,
  Kate: 130,
  William: 45,
  Matthew: 120,
  Ethan: 40,
  David: 55
}

function getAvarageTime(obj) {
  const values = Object.values(obj)
  let total = 0;
  for (const value of values) {
    total += value
  }
  return `Count of players ${values.length}, average time ${total/values.length}`
}

console.log(getAvarageTime(players));

// Task 3

// –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
// 1 - –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞—Å–∏–≤
// 2 - –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞–∑–≤–∞ –∫–Ω–∏–≥–∏
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –Ü–º–µ–Ω–∞ —é—Ö–µ—Ä—ñ–≤(—Ñ–æ—Ä–º–∞—Ç string) –≤ —è–∫–∏—Ö —î –¥–∞–Ω–Ω–∞ –∫–Ω–∏–≥–∞ 
// –ø–æ–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤—ñ–∫ –≤—Å—ñ—Ö —é–∑–µ—Ä—ñ–≤ —É —è–∫–∏—Ö —î –∫–ª—é—á age

const friends = [
  { name: "Anna", books: ["Bible", "Harry Potter"], age: 21 },
  { name: "Bob", books: ["War-and peace", "Romeo and Juliet"], age: 26 },
  { name: "Alice", books: ["War and peace", "Romeo and Juliet"] },
  { name: "Oleksii", books: ["Bible", "War and peace", "Harry Potter", "Romeo and Juliet"], age: 26 }
]

function getUsers(arr, book) {
  let userNames = [];
  for (const user of arr) {
    if (user.books.includes(book)) {
      userNames.push(user.name)
    }
  }
  return userNames.join(', ')
}

console.log(getUsers(friends, 'Harry Potter'));

function getTotalAge(arr) {
  let totalAge = 0;
  for (const user of arr) {
    if ('age' in user) {  // –æ–ø–µ—Ä–∞—Ç–æ—Ä in –ø–µ—Ä–µ–≤—ñ—Ä—è—î –≤–ª–∞—Å–Ω—ñ —Ç–∞ –≤—Å–ø–∞–¥–∫–æ–≤–∞–Ω—ñ –∫–ª—é—á—ñ
      console.log(`${user.name} - ${user.age}`);
      totalAge += user.age
    }
    // if (user.hasOwnProperty('age')) { // –æ–ø–µ—Ä–∞—Ç–æ—Ä hasOwnProperty –ø–µ—Ä–µ–≤—ñ—Ä—è—î —Ç—ñ–ª—å–∫–∏ –≤–ª–∞—Å–Ω—ñ –∫–ª—é—á—ñ
    //   totalAge += user.age
    // }
    // if (user.age !== undefined) {
    //   totalAge += user.age
    // }
    
  }
  return `Total age of all users ${totalAge}`
}

console.log(getTotalAge(friends));

// Task 4

// 1 - –°—Ç–≤–æ—Ä–∏ –º–µ—Ç–æ–¥ –æ–± º—î–∫—Ç—É —è–∫–∏–π –±—É–¥–µ –ø—Ä–∏—è–º–∞—Ç–∏ 1 –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞–∑–≤—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —ñ–º–µ–Ω —É—á–Ω—ñ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É
// 2 - –°—Ç–≤–æ—Ä–∏ –º–µ—Ç–æ–¥ –æ–± º—î–∫—Ç—É —è–∫–∏–π –±—É–¥–µ –ø—Ä–∏—è–π–º–∞—Ç–∏ 1 –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞–∑–≤—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—á–∫—ñ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É 

const hogvarts = {
  griffindor: [
    {
      name: "Harry",
      points: 17
    },
    {
      name: "Hermiona",
      points: 19 
    },
    {
      name: "Ron",
      points: 17
    }
  ],
  slizerin: [
    {
      name: "Drako",
      points: 17
    },
    {
      name: "Goyl",
      points: 14
    },
    {
      name: "Crabbe",
      points: 5
    }
  ],
  getUserList(faculty) {
    if (!(faculty in this)) {
      return 'Faculty not found üò¢'
    }
    const students = [];
    for (const student of this[faculty]) {
      students.push(student.name)
    }
    return students.join(', ')
  },
  getTotalPoints(faculty) {
    if (!(faculty in this)) {
      return "Faculty not found üò¢";
    }
    let totalPoints = 0;
    for (const student of this[faculty]) {
      if ('points' in student) {
        totalPoints += student.points;
      }
    }
    return `Total points of ${faculty} - ${totalPoints}`;
  }
};

console.log(hogvarts.getUserList("griffindor"));
console.log(hogvarts.getUserList("slitherin"));

console.log(hogvarts.getTotalPoints('griffindor'));
console.log(hogvarts.getTotalPoints('slitherin'));



// –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –º–∞—Å–∏–≤—É

const array = [1, 4, 6, 8, 9]
// const first = array[0]
// const second = array[2]
// console.log(first);
// console.log(second);

const [first, , , second] = array; // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –º–∞—Å–∏–≤–∞, –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –º–∞—Å–∏–≤–∞ –∑–∞ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å—é
console.log(first);
console.log(second);
  

// –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –æ–± º—î–∫—Ç—ñ–≤ 

const userDes = {
  name: 'Destractor',
  skills: {
    html: true,
    css: false,
    js: true
  }
}

console.log(userDes.skills.html);

const {skills, skills : {html}} = userDes
console.log('object', skills);
console.log('html', html);

const css = 'i don`t know'
const { skills: { css: cssLanguage } } = userDes // –∑–º—ñ–Ω–∞ –Ω–∞–∑–≤–∏ –∑–º—ñ–Ω–Ω–æ—ó –ø—ñ–¥ —á–∞—Å –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó
console.log(css);
console.log(cssLanguage);

// –ø—Ä–∞–∫—Ç–∏—á–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—Å—å—è

function getUserName({name, skills : {html, css, js}} = {}) {  // —Ñ—ñ–≥—É—Ä–Ω—ñ –¥—É–∂–∫–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —Ö–æ—Ä–æ—à–∏–π —Ç–æ–Ω
  console.log(`Hello my name is ${name}, i now html - ${html}, css - ${css}, js - ${js}`);
}

getUserName(userDes)

const users = [{ name: 'Artem' }, { name: 'Diana' }, { name: 'Mark' }];

const names = [];
for (const user of users) {
  names.push(user.name)
}
for (const { name } of users) {
  names.push(name)
}

console.log(names);


//  –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ ...rest and ..spread

// –¥–ª—è —Ç–æ–≥–æ —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–ø—ñ—é —Å–∫–ª–∞–¥–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –¥–∞–Ω–∏—Ö –º–∏ –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä ...spread

const arr1 = [1, 2, 3, 4]
const arr2 = [...arr1]  // –æ–ø–µ—Ä–∞—Ü—ñ—è spread –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —Ä–æ—Å–ø–∏–ª–µ–Ω–Ω—è 
arr1.splice(0, 1);
console.log('arr1', arr1);
console.log('arr2', arr2);
console.log(arr1 === arr2);

// –æ–ø–µ—Ä–∞—Ç–æ—Ä ...rest

const arr3 = [4, 5, 8, 3, 5];
const [one, ...args] = arr3;

console.log(one);
console.log(args);
console.log('arr', arr3);


function propsRe(...props) { // rest, –∑–∞–≤–∂–¥–∏ –ø—ñ–¥ —á–∞—Å –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤

}

propsRe(...arr3) // spread, –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–¥–∞—á—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤


function example(first, second, third) {
  console.log('first', first);
  console.log('second', second);
  console.log("third", third);
}

example(...arr3) // example(4, 5, 8) —Ä–æ–∑–ø–∏–¥–µ–Ω–Ω—è –º–∞—Å–∏–≤–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ ...rest

